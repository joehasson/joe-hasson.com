# .github/workflows/deploy.yml
name: Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
        
      - name: Terraform Plan
        working-directory: ./terraform
        run: >
          terraform plan
          -var="ssh_public_key=${{ secrets.EC2_SSH_PUBLIC_KEY }}"
          -var="cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}"
          -var="cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}"

      - name: Terraform Apply
        working-directory: ./terraform
        if: github.ref == 'refs/heads/main'
        run: >
          terraform apply -auto-approve
          -var="ssh_public_key=${{ secrets.EC2_SSH_PUBLIC_KEY }}"
          -var="cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}"
          -var="cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}"
        
      # Store IP for use in later step
      - name: Get EC2 IP
        id: get-ip
        working-directory: ./terraform
        run: |
          echo "EC2_IP=$(terraform output -json | jq -r '.public_ip.value')" >> $GITHUB_OUTPUT

      - name: Purge Cloudflare Cache
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{
              "files": [
                "https://joe-hasson.com/*"
              ]
            }'

      - name: Run deploy script on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          username: ec2-user
          host: ${{ steps.get-ip.outputs.EC2_IP }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: ls && ./scripts/deploy.sh

